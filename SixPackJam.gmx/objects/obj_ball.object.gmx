<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>holder = 0;
throw_speed = 10;

spawn_x = x;
spawn_y = y;

show_debug_message(string(spawn_x));
show_debug_message(string(spawn_y));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>108</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_friction</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0.2</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// see http://gmc.yoyogames.com/index.php?showtopic=446075

with obj_ball {
    radius = 16;

    if (id != other.id) {
        dx = other.x - x;
        dy = other.y - y;
        dis = sqrt(sqr(dx)+sqr(dy));
        
        if (dis &lt;= radius + radius) {
            // normalize
            dx /= dis;
            dy /= dis;
            
            // calculate the component of velocity in the direction
            vp1 = hspeed*dx + vspeed*dy;
            vp2 = other.hspeed*dx + other.vspeed*dy;
            
            if ((vp1 - vp2) != 0) {
                dt = (radius + radius - dis) / (vp1-vp2)
                
                // move the balls back so they just touch
                x -= hspeed * dt;
                y -= vspeed * dt;
                other.x -= other.hspeed * dt;
                other.y -= other.vspeed * dt;
                
                // projection of the velocities in these axes
                va1 = (hspeed*dx + vspeed*dy);
                vb1 = (vspeed*dx - hspeed*dy);
                va2 = (other.hspeed*dx + other.vspeed*dy);
                vb2 = (other.vspeed*dx - other.hspeed*dy);
                
                // new velocities in these axes. take into account the
                // mass of each ball.
                // TODO: mass of held ball is super huge
                // TODO: refactor bounce as property of balls
                mass = 1;
                vaP1 = (va1 + 2*(va2-va1)) / (1 + mass/mass);
                vaP2 = (va2 + 2*(va1-va2)) / (1 + mass/mass);
                
                hspeed = vaP1*dx - vb1*dy;
                vspeed = vaP1*dy + vb1*dx;
                other.hspeed = vaP2*dx - vb2*dy;
                other.vspeed = vaP2*dy + vb2*dx;
                
                // we moved the balls back in time, so we need to
                // move them forward
                x += hspeed*dt;
                y += vspeed*dt;
                other.x += other.hspeed*dt;
                other.y += other.vspeed*dt;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (holder = 1) {
    x = obj_player_one.x + obj_player_one.sprite_width/2 + sprite_width/2;
    y = obj_player_one.y;
}
else if (holder = 2) {
    x = obj_player_two.x - obj_player_one.sprite_width/2 - sprite_width/2;
    y = obj_player_two.y;
}

if (speed &lt; 5) {
    image_index = 0;
}
else {
    image_index = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_ball">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Collision</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>115</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_bounce</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (holder = 1) {
    holder = 0;
    hspeed = throw_speed + obj_player_one.hspeed;
    vspeed = obj_player_one.vspeed;
    obj_player_one.has_ball = false;
    
    x = obj_player_one.x + obj_player_one.sprite_width/2 + sprite_width/2;
    y = obj_player_one.y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (holder = 2) {
    holder = 0;
    hspeed = -throw_speed + obj_player_two.hspeed;
    vspeed = obj_player_two.vspeed;
    obj_player_two.has_ball = false;
    
    x = obj_player_two.x - obj_player_two.sprite_width/2 - sprite_width/2;
    y = obj_player_two.y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
